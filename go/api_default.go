/*
 * GExemplar
 *
 * An exemplar golang repo with an openapi spec
 *
 * API version: 0.0.1
 * Contact: decline@umass.edu
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
	"strings"
)

// A DefaultApiController binds http requests to an api service and writes the service results to the http response
type DefaultApiController struct {
	service DefaultApiServicer
}

// NewDefaultApiController creates a default api controller
func NewDefaultApiController(s DefaultApiServicer) Router {
	return &DefaultApiController{service: s}
}

// Routes returns all of the api route for the DefaultApiController
func (c *DefaultApiController) Routes() Routes {
	return Routes{
		{
			"CountGet",
			strings.ToUpper("Get"),
			"/v1/count",
			c.CountGet,
		},
		{
			"DogGet",
			strings.ToUpper("Get"),
			"/v1/dog",
			c.DogGet,
		},
	}
}

// CountGet - Returns the number of times this endpoint has been called.
func (c *DefaultApiController) CountGet(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.CountGet()
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}

// DogGet - Returns the string \"woof\".
func (c *DefaultApiController) DogGet(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.DogGet()
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}
